name: PitchBlack Recovery Build

on:
  workflow_dispatch:
    inputs:
      MANIFEST_BRANCH:
        description: 'MANIFEST_BRANCH'
        required: true
        default: 'android-12.1'
      DEVICE_TREE_URL:
        description: 'DEVICE_TREE_URL'
        required: true
        default: 'https://github.com/smile349/android_device_xiaomi_venus_TWRP'
      DEVICE_TREE_BRANCH:
        description: 'DEVICE_TREE_BRANCH'
        required: true
        default: 'android-14'
      DEVICE_PATH:
        description: 'DEVICE_PATH'
        required: true
        default: 'device/xiaomi/venus'
      DEVICE_NAME:
        description: 'DEVICE_NAME'
        required: true
        default: 'venus'
      MAKEFILE_NAME:
        description: 'MAKEFILE_NAME'
        required: true
        default: 'twrp_star'
      BUILD_TARGET:
        description: 'BUILD_TARGET'
        required: true
        default: 'boot'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Check Out
      uses: actions/checkout@v3
      with:
        persist-credentials: false

    - name: Setup Build Environment
      run: |
        sudo apt update
        sudo apt install -y openjdk-8-jdk git-core gnupg flex bison gperf libsdl1.2-dev \
        squashfs-tools build-essential zip curl zlib1g-dev gcc-multilib g++-multilib \
        lib32ncurses5-dev x11proto-core-dev libx11-dev libgl1-mesa-dev libxml2-utils xsltproc unzip \
        python network-manager libwxgtk3.0-gtk3-dev

    - name: Initialize workspace
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_ENV

    - name: Authenticate GitHub
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Configure Git
      run: |
        git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

    - name: Sync PitchBlack sources
      run: |
        cd ${{ env.workspace-folder }}
        git clone --depth=1 https://github.com/PitchBlackRecoveryProject/manifest_pbrp.git -b ${{ github.event.inputs.MANIFEST_BRANCH }} .repo/local_manifests
        repo init -u https://github.com/PitchBlackRecoveryProject/manifest_pbrp.git -b ${{ github.event.inputs.MANIFEST_BRANCH }}
        repo sync -c -j$(nproc --all)

    - name: Clone device tree
      run: |
        cd ${{ env.workspace-folder }}
        git clone ${{ github.event.inputs.DEVICE_TREE_URL }} -b ${{ github.event.inputs.DEVICE_TREE_BRANCH }} ${{ github.event.inputs.DEVICE_PATH }}

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 16

    - name: Build PitchBlack Recovery
      run: |
        cd ${{ env.workspace-folder }}
        source build/envsetup.sh
        lunch ${{ github.event.inputs.MAKEFILE_NAME }}-eng
        make clean
        mka pbrp -j$(nproc --all)
      continue-on-error: true

    - name: Check the output directory before uploading
      run: |
        ls -al ${{ env.workspace-folder }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ env.workspace-folder }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.img
          ${{ env.workspace-folder }}/out/target/product/${{ github.event.inputs.DEVICE_NAME }}/*.zip
        name: ${{ github.event.inputs.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ github.event.inputs.MANIFEST_BRANCH }}
          Device: ${{ github.event.inputs.DEVICE_NAME }}
          Target: ${{ github.event.inputs.BUILD_TARGET }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
